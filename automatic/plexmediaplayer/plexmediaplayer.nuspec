<?xml version="1.0" encoding="utf-8"?>
<!-- Read this before creating packages: https://chocolatey.org/docs/create-packages -->
<!-- It is especially important to read the above link to understand additional requirements when publishing packages to the community feed aka dot org (https://community.chocolatey.org/packages). -->

<!-- Test your packages in a test environment: https://github.com/chocolatey/chocolatey-test-environment -->

<!--
This is a nuspec. It mostly adheres to https://docs.nuget.org/create/Nuspec-Reference. Chocolatey uses a special version of NuGet.Core that allows us to do more than was initially possible. As such there are certain things to be aware of:

* the package xmlns schema url may cause issues with nuget.exe
* Any of the following elements can ONLY be used by choco tools - projectSourceUrl, docsUrl, mailingListUrl, bugTrackerUrl, packageSourceUrl, provides, conflicts, replaces
* nuget.exe can still install packages with those elements but they are ignored. Any authoring tools or commands will error on those elements
-->

<!-- You can embed software files directly into packages, as long as you are not bound by distribution rights. -->
<!-- * If you are an organization making private packages, you probably have no issues here -->
<!-- * If you are releasing to the community feed, you need to consider distribution rights. -->
<!-- Do not remove this test for UTF-8: if “Ω” doesn’t appear as greek uppercase omega letter enclosed in quotation marks, you should use an editor that supports UTF-8, not this one. -->
<package xmlns="http://schemas.microsoft.com/packaging/2015/06/nuspec.xsd">
  <metadata>
    <!-- == PACKAGE SPECIFIC SECTION == -->
    <!-- This section is about this package, although id and version have ties back to the software -->
    <!-- id is lowercase and if you want a good separator for words, use '-', not '.'. Dots are only acceptable as suffixes for certain types of packages, e.g. .install, .portable, .extension, .template -->
    <!-- If the software is cross-platform, attempt to use the same id as the debian/rpm package(s) if possible. -->
    <id>plexmediaplayer</id>
    <!-- version should MATCH as closely as possible with the underlying software -->
    <!-- Is the version a prerelease of a version? https://docs.nuget.org/create/versioning#creating-prerelease-packages -->
    <!-- Note that unstable versions like 0.0.1 can be considered a released version, but it's possible that one can release a 0.0.1-beta before you release a 0.0.1 version. If the version number is final, that is considered a released version and not a prerelease. -->
    <version>2.58.0.1079</version>
    <!-- owners is a poor name for maintainers of the package. It sticks around by this name for compatibility reasons. It basically means you. -->
    <owners>Maurice Kevenaar</owners>
    <!-- ============================== -->

    <!-- == SOFTWARE SPECIFIC SECTION == -->
    <!-- This section is about the software itself -->
    <title>Plex Media Player for Windows</title>
    <authors>Plex, Inc.</authors>
    <!-- projectUrl is required for the community feed -->
    <projectUrl>https://www.plex.tv/apps/computer/plex-media-player/</projectUrl>
    <iconUrl>https://cdn.jsdelivr.net/gh/mkevenaar/chocolatey-packages@866115c69165780d9fab3d896a8f66c98a92fd32/icons/plexmediaplayer.png</iconUrl>
    <!-- copyright is usually years and software vendor, but not required for internal feeds -->
    <copyright>Copyright 2013, Plex Inc.</copyright>
    <tags>plex plexmediaplayer streaming video music plexmediaserver htpc dlna</tags>
    <releaseNotes>https://forums.plex.tv/t/plex-media-player/120475/69</releaseNotes>
    <licenseUrl>https://www.plex.tv/downloads/#remodal-terms</licenseUrl>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <packageSourceUrl>https://github.com/mkevenaar/chocolatey-packages/tree/master/automatic/plexmediaplayer</packageSourceUrl>
    <docsUrl>https://support.plex.tv/articles/</docsUrl>
    <mailingListUrl>https://forums.plex.tv/</mailingListUrl>
    <summary>Plex Media Player is the go-to app for Home Theater PCs (HTPCs) connected to big screen TVs. Your collection of videos, music, and photos never looked so good!</summary>
    <description><![CDATA[## The ultimate home theater experience

Your HTPC running Plex Media Player gives you the best possible playback experience on a dizzying array of configurations. From PCs to Raspberry Pis to Mac Minis, Plex Media Player is the most powerful, sophisticated way to play media in your home theater. Simple and intuitive controls give you the cleanest, most theater-like viewing experience. Power users and media junkies rejoice!

## Easy to search and browse

Plex Media Player has powerful live search capabilities that allow you to quickly find that movie, show, or song you are looking for. Plex also provides helpful suggestions when you don’t really know what you want.

## Plays anything, anywhere

Plex Media Player gives you both a beautiful HTPC experience and a slick desktop media player experience. Whether you are home or away, you can easily play any file type with the world’s most powerful playback engine. It’s the ultimate media player!

[Plex Media Server software here](https://chocolatey.org/packages/plexmediaserver)

**SOCIAL MEDIA:**
[Facebook](https://www.facebook.com/plexapp) | [Twitter](https://twitter.com/plex) | [Google+](https://plus.google.com/+plex) | [YouTube](https://www.youtube.com/user/plextvapp) | [blog](https://www.plex.tv/blog/) | [LinkedIn](https://www.linkedin.com/company/1175144/)

**Please Note**: This is an automatically updated package. If you find it is
out of date by more than a day or two, please contact the maintainer(s) and
let them know the package is no longer updating correctly.
]]></description>
    <!-- =============================== -->

    <!-- Specifying dependencies and version ranges? https://docs.nuget.org/create/versioning#specifying-version-ranges-in-.nuspec-files -->
        <dependencies>
            <dependency id="KB2919355" version="1.0" />
        </dependencies>

    <!--<provides>NOT YET IMPLEMENTED</provides>-->
    <!--<conflicts>NOT YET IMPLEMENTED</conflicts>-->
    <!--<replaces>NOT YET IMPLEMENTED</replaces>-->
    </metadata>
  <!-- this section controls what actually gets packaged into the Chocolatey package -->
  <!-- Uncomment to limit what is packed in -->
    <files>
        <file src="tools\**" target="tools" />
    </files>
</package>
